generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String?
  gender    Gender   @default (NON_SPECIFIED)
  profilePicture String? //optional

  posts     Post []
  comments  Comment[]
  likes     Like[]

  sentFollows     UserFollow[] @relation("UserSentFollows")
  receivedFollows UserFollow[] @relation("UserReceivedFollows")
}

model Post{
  id        Int      @id @default(autoincrement())  
  title     String  
  content   String  

  author    User     @relation(fields: [authorId], references: [id])  
  authorId  Int  
  comments  Comment[]
  likes     Like[]  
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  }
 
model Comment{
  id           Int      @id @default(autoincrement())
  content      String

  author       User     @relation(fields: [authorId], references: [id])
  authorId     Int
  post         Post     @relation(fields:[postId], references: [id])
  postId       Int
  createdAt    DateTime @default(now())
}    

model Like{
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  post      Post        @relation(fields: [postId], references: [id])
  postId    Int

  @@unique([userId, postId]) // a user can only like a specific post only once 
} 

model UserFollow {
  id          Int                  @id @default(autoincrement())
  status      FollowRequestStatus @default(PENDING)
 
  follower    User @relation("UserSentFollows", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("UserReceivedFollows", fields: [followingId], references: [id])
  followingId Int
  
  createdAt   DateTime            @default(now())
  @@unique([followerId, followingId])
}

enum Gender{     
  MALE
  FEMALE
  NON_SPECIFIED 
} 

enum FollowRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}
